{"title":"socket编程python示例","uid":"cf34b485e52bf362f60976953dc6221e","slug":"socket编程python示例","date":"2022-02-07T13:41:18.000Z","updated":"2022-06-03T16:23:49.770Z","comments":true,"path":"api/articles/socket编程python示例.json","keywords":null,"cover":"/img/cover/python.png","content":"<meta name=\"referrer\" content=\"no-referrer\"/>\n\n<h1 id=\"socket编程python示例\"><a href=\"#socket编程python示例\" class=\"headerlink\" title=\"socket编程python示例\"></a>socket编程python示例</h1><h2 id=\"socket定义\"><a href=\"#socket定义\" class=\"headerlink\" title=\"socket定义\"></a>socket定义</h2><p>socket 是应用层与传输层交互的接口, 本质上讲是一个整数, 从操作系统角度来说是表示两个不同主机上应用进程的关系(IP:Port). socket可以分为TCP socket和UDP socket两种, 前者提供可靠的服务, 后者提供不可靠的服务, 但后者相对前者性能高很多. 可靠意味着接收方收到的消息与发送方发送的消息一致(不丢失,不重复,不乱序). 再从编程语言的角度来讲, socket就是一系列的函数与对象, 利用这些函数与对象, 我们可以完成不同主机上应用进程之间的交互.</p>\n<h2 id=\"python示例-C-S模式-TCP\"><a href=\"#python示例-C-S模式-TCP\" class=\"headerlink\" title=\"python示例(C/S模式, TCP)\"></a>python示例(C/S模式, TCP)</h2><p><img src=\"https://gitee.com/developer_27/picgo/raw/master/image-20220207220418267.png\" alt=\"image-20220207220418267\"></p>\n<h3 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> socket\n<span class=\"token keyword\">from</span> threading <span class=\"token keyword\">import</span> Thread\n\n<span class=\"token comment\"># 主机地址为空字符串，表示绑定本机所有网络接口ip地址</span>\nIP <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token comment\"># 端口号</span>\nPORT <span class=\"token operator\">=</span> <span class=\"token number\">50000</span>\n<span class=\"token comment\"># 定义一次从socket缓冲区最多读入512个字节数据</span>\nBUFFER <span class=\"token operator\">=</span> <span class=\"token number\">512</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">process_socket</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">:</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"与</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>address<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">的连接建立\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> s<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                received <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>BUFFER<span class=\"token punctuation\">)</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> received<span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'与</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>address<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">的连接断开'</span></span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">break</span>\n\n                <span class=\"token comment\"># 读取的字节数据是bytes类型，需要解码为字符串</span>\n                info <span class=\"token operator\">=</span> received<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'收到对方信息： </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>info<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">except</span> ConnectionResetError<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>address<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">强制断开连接\"</span></span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">return</span>\n\n            <span class=\"token comment\"># 发送的数据类型必须是bytes，所以要编码</span>\n            c<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'服务端接收到了信息 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>info<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 实例化一个socket对象</span>\n    <span class=\"token comment\"># 参数 AF_INET 表示该socket网络层使用IP协议</span>\n    <span class=\"token comment\"># 参数 SOCK_STREAM 表示该socket传输层使用TCP协议</span>\n    <span class=\"token keyword\">with</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> welcomeSocket<span class=\"token punctuation\">:</span>\n\n        <span class=\"token comment\"># socket绑定地址和端口</span>\n        welcomeSocket<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>IP<span class=\"token punctuation\">,</span> PORT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 使socket处于监听状态，等待客户端的连接请求</span>\n        <span class=\"token comment\"># 参数 8 表示 最多接受多少个等待连接的客户端</span>\n        welcomeSocket<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'服务端启动成功，在</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>PORT<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">端口等待客户端连接...'</span></span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n            c<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">=</span> welcomeSocket<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'接受一个客户端连接:'</span><span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 用多线程的方式解决server同时只能为一个client服务的问题</span>\n            t <span class=\"token operator\">=</span> Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>process_socket<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            t<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"client\"><a href=\"#client\" class=\"headerlink\" title=\"client\"></a>client</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> socket <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nIP <span class=\"token operator\">=</span> <span class=\"token string\">'127.0.0.1'</span>\nPORT <span class=\"token operator\">=</span> <span class=\"token number\">50000</span>\nBUFFER <span class=\"token operator\">=</span> <span class=\"token number\">1024</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token comment\"># 实例化一个socket对象，指明协议</span>\n    <span class=\"token keyword\">with</span> socket<span class=\"token punctuation\">(</span>AF_INET<span class=\"token punctuation\">,</span> SOCK_STREAM<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> dataSocket<span class=\"token punctuation\">:</span>\n\n        <span class=\"token comment\"># 连接服务端socket</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            dataSocket<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>IP<span class=\"token punctuation\">,</span> PORT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> ConnectionRefusedError<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'服务器拒绝连接'</span><span class=\"token punctuation\">)</span>\n            exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 从终端读入用户输入的字符串</span>\n            toSend <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'>>> '</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> toSend <span class=\"token operator\">==</span> <span class=\"token string\">'exit'</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token comment\"># 发送消息，也要编码为 bytes</span>\n            dataSocket<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>toSend<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 等待接收服务端的消息</span>\n            received <span class=\"token operator\">=</span> dataSocket<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>BUFFER<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 如果返回空bytes，表示对方关闭了连接</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> received<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token comment\"># 打印读取的信息</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>received<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":" socket编程python示例socket定义socket 是应用层与传输层交互的接口, 本质上讲是一个整数, 从操作系统角度来说是表示两个不同主机上应用进程的关系(IP:Port). socket可以分为TCP socket和UDP socket两种, 前者提供可靠的服务,...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"python","slug":"python","count":1,"path":"api/categories/python.json"}],"tags":[{"name":"socket","slug":"socket","count":2,"path":"api/tags/socket.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#socket%E7%BC%96%E7%A8%8Bpython%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">socket编程python示例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#socket%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">socket定义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#python%E7%A4%BA%E4%BE%8B-C-S%E6%A8%A1%E5%BC%8F-TCP\"><span class=\"toc-text\">python示例(C&#x2F;S模式, TCP)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#server\"><span class=\"toc-text\">server</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#client\"><span class=\"toc-text\">client</span></a></li></ol></li></ol></li></ol>","author":{"name":"CYR","slug":"blog-author","avatar":"/static/img/avatar.jpg","link":"/","description":"一个学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"socket详解","uid":"3cb78585ebc1a97e25cb5e965d62b8b6","slug":"socket详解","date":"2022-02-09T12:57:41.000Z","updated":"2022-06-03T16:24:14.437Z","comments":true,"path":"api/articles/socket详解.json","keywords":null,"cover":"/img/cover/socket.png","text":"socket是什么?当我们在编辑器中写下如下代码 from socket import * with socket(AF_INET, SOCK_STREAM) as dataSocket: dataSocket.connect((IP, PORT)) # AF_INET代表soc...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"计算机网络","slug":"计算机网络","count":2,"path":"api/categories/计算机网络.json"}],"tags":[{"name":"socket","slug":"socket","count":2,"path":"api/tags/socket.json"}],"author":{"name":"CYR","slug":"blog-author","avatar":"/static/img/avatar.jpg","link":"/","description":"一个学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"为typora配置picgo图床","uid":"47eae1e4716d0028cdae517170b1e6a4","slug":"为typora配置picgo图床","date":"2022-02-07T11:41:22.000Z","updated":"2022-06-03T16:24:36.901Z","comments":true,"path":"api/articles/为typora配置picgo图床.json","keywords":null,"cover":"/img/cover/typorapicgo.png","text":" 下载picgo, 安装gitee-uploader插件(需要node和gitee) 配置typora, 验证是否上传成功 ","link":"","photos":[],"count_time":{"symbolsCount":69,"symbolsTime":"1 mins."},"categories":[{"name":"鼓捣","slug":"鼓捣","count":2,"path":"api/categories/鼓捣.json"}],"tags":[{"name":"markdown","slug":"markdown","count":1,"path":"api/tags/markdown.json"}],"author":{"name":"CYR","slug":"blog-author","avatar":"/static/img/avatar.jpg","link":"/","description":"一个学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}